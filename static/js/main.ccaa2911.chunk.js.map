{"version":3,"sources":["components/Task.js","components/Tasks.js","App.js","index.js"],"names":["completedStyle","color","textDecoration","Task","task","onDelete","onComplete","className","onClick","id","style","completed","text","Tasks","tasks","map","App","useState","setTasks","todo","setTodo","addTodo","newId","Math","floor","random","onSubmit","e","preventDefault","type","placeholder","value","onChange","currentTarget","filter","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAcMA,EAAiB,CACrBC,MAAO,QACPC,eAAgB,gBAGHC,EAfF,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,WAC7B,OACE,sBAAKC,UAAU,OAAf,UACE,cAAC,IAAD,CAAeA,UAAU,oBAAoBC,QAAS,kBAAMF,EAAWF,EAAKK,OAC5E,oBAAKC,OAA0B,IAAnBN,EAAKO,UAAqBX,EAAiB,KAAKO,UAAU,YAAtE,SAAmFH,EAAKQ,OACxF,cAAC,IAAD,CAAeL,UAAU,kBAAkBC,QAAS,kBAAMH,EAASD,EAAKK,WCI/DI,EAVD,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,MAAOT,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,WAC/B,OACE,qBAAKC,UAAU,QAAf,SACGO,EAAMC,KAAI,SAACX,GAAD,OACX,cAAC,EAAD,CAAMA,KAAMA,EAAoBC,SAAUA,EAAUC,WAAYA,GAAzCF,EAAKK,UC6DnBO,MAhEf,WAAe,MAEaC,mBAAS,CACjC,CAAER,GAAI,EACJG,KAAM,UACND,WAAW,KALF,mBAENG,EAFM,KAECI,EAFD,OAUWD,mBAAS,IAVpB,mBAUNE,EAVM,KAUAC,EAVA,KAwBPC,EAAU,SAACF,GACb,IAAMG,EAAQC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAoB,EAClDP,EAAS,GAAD,mBAAKJ,GAAL,CAAY,CAClBL,GAAIa,EACJV,KAAMO,EACNR,WAAW,OAejB,OACE,sBAAKJ,UAAU,iBAAf,UACE,oBAAIA,UAAU,UAAd,uBACA,uBAAMA,UAAU,iBAAiBmB,SA9BpB,SAACC,GAChBA,EAAEC,iBACW,KAATT,IACJE,EAAQF,GACRC,EAAQ,MA0BN,UACE,uBACAS,KAAK,OACLtB,UAAU,QACVuB,YAAY,WACZC,MAAOZ,EACPa,SAzCe,SAACL,GACpBP,EAAQO,EAAEM,cAAcF,UA0CpB,wBAAQF,KAAK,SAAStB,UAAU,UAAhC,oBAEF,cAAC,EAAD,CAAOO,MAAOA,EAAOT,SAtBD,SAACI,GACvBS,EAASJ,EAAMoB,QAAO,SAAC9B,GAAD,OAAUA,EAAKK,KAAOA,OAqBMH,WAjB1B,SAACG,GACzBS,EAASJ,EAAMC,KAAI,SAACX,GAAD,OAAUA,EAAKK,KAAOA,EAAZ,2BAAqBL,GAArB,IAA2BO,WAAYP,EAAKO,YAAcP,SAiBrF,qBAAIG,UAAU,UAAd,sBAAkCO,EAAMqB,OAAxC,IAAkE,IAAjBrB,EAAMqB,OAAe,OAAS,QAA/E,mBACA,wBAAQN,KAAK,SAAStB,UAAU,gBAAgBC,QAAS,kBAAMU,EAAS,KAAxE,6BCzDNkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ccaa2911.chunk.js","sourcesContent":["import React from 'react';\r\nimport { BiCheckCircle } from 'react-icons/bi';\r\nimport { BiMinusCircle } from 'react-icons/bi';\r\n\r\nconst Task = ({task, onDelete, onComplete}) => {\r\n  return (\r\n    <div className=\"task\">\r\n      <BiCheckCircle className=\"icon complete-btn\" onClick={() => onComplete(task.id)} />\r\n      <h3  style={task.completed === true ? completedStyle : null}className=\"task-name\">{task.text}</h3>\r\n      <BiMinusCircle className=\"icon delete-btn\" onClick={() => onDelete(task.id)}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst completedStyle = {\r\n  color: \"green\",\r\n  textDecoration: \"line-through\"\r\n}\r\n\r\nexport default Task\r\n","import React from 'react';\r\nimport Task from \"./Task\"\r\n\r\nconst Tasks = ({tasks, onDelete, onComplete}) => {\r\n  return (\r\n    <div className=\"tasks\">\r\n      {tasks.map((task) => (\r\n      <Task task={task} key={task.id} onDelete={onDelete} onComplete={onComplete}/>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tasks\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Tasks from \"./components/Tasks\";\n\nfunction App() {\n  //Tasks\n  const [tasks, setTasks] = useState([\n    { id: 1,\n      text: \"cooking\",\n      completed: false\n    }\n  ]);\n\n  //User Input\n  const [todo, setTodo] = useState('');\n\n  const handleChange = (e) => {\n    setTodo(e.currentTarget.value)\n  }\n\n  //Add a new task\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (todo === \"\") return;\n    addTodo(todo);\n    setTodo(\"\");\n  };\n\n  const addTodo = (todo) => {\n      const newId = Math.floor(Math.random() * 10000) + 1;\n      setTasks([...tasks, {\n        id: newId,\n        text: todo,\n        completed: false\n      }\n    ]);\n  };\n\n  //Delete a task\n  const onDeleteHandler = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  //Complete a task\n  const onCompleteHandler = (id) => {\n    setTasks(tasks.map((task) => task.id === id ? {...task, completed: !task.completed } : task))  \n  }\n\n  return (\n    <div className=\"dashboard flex\">\n      <h1 className=\"heading\">TODO list</h1>\n      <form className=\"userInput flex\" onSubmit={onSubmit}>\n        <input \n        type=\"text\" \n        className=\"input\"\n        placeholder=\"Add Task\"\n        value={todo} \n        onChange={handleChange}\n        /> \n        <button type=\"submit\" className=\"add-btn\">Add</button> \n      </form>\n      <Tasks tasks={tasks} onDelete={onDeleteHandler} onComplete={onCompleteHandler}/>\n      <h2 className=\"counter\">You have {tasks.length} {tasks.length === 1 ? \"task\" : \"tasks\"} in your list</h2>\n      <button type=\"button\" className=\"btn clear-btn\" onClick={() => setTasks([])}>Clear Tasks</button> \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}